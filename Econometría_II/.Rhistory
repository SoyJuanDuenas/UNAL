install.packages("dplyr")
install.packages("ggplot2")
install.packages("shiny")
install_github("StatsWithR/statsr")
devtools
library(devtools)
library(devtools)
install.packages("devtools")
library(devtools)
install.packages("devtools")
install.packages("devtools")
library(devtools)
install_github("StatsWithR/statsr")
install_github("StatsWithR/statsr", force = TRUE)
qnorm(0.05)
library(statsr)
library(dplyr)
library(shiny)
library(ggplot2)
data(ames)
names(ames)
ggplot(data = ames, aes(x = area)) +
geom_histogram()
library(statsr)
library(dplyr)
library(shiny)
library(ggplot2)
data(ames)
names(ames)
ggplot(data = ames, aes(x = area)) +
geom_histogram()
data(ames)
names(ames)
ggplot(data = ames, aes(x = area)) +
geom_histogram()
sampl1 <- ames %>%
sample_n(size = 50)
samp1 %>%
summarise(x_bar = mean(area))
library(statsr)
library(dplyr)
library(shiny)
library(ggplot2)
data(ames)
names(ames)
ggplot(data = ames, aes(x = area)) +
geom_histogram()
sampl1 <- ames %>%
sample_n(size = 50)
sampl1 %>%
summarise(x_bar = mean(area))
sampl2 %>%
sample_n(size = 50) %>%
summarise(x_bar = mean(area))
library(statsr)
library(dplyr)
library(shiny)
library(ggplot2)
data(ames)
names(ames)
ggplot(data = ames, aes(x = area)) +
geom_histogram()
sampl1 <- ames %>%
sample_n(size = 50)
sampl1 %>%
summarise(x_bar = mean(area))
sampl2 <- ames %>%
sample_n(size = 50) %>%
summarise(x_bar = mean(area))
sample_means50 <- ames %>%
rep_sample_n(size = 50, reps = 15000, replace = TRUE) %>%
summarise(x_bar = mean(area))
ggplot(data = sample_means50, aes(x = x_bar)) +
geom_histogram(binwidth = 20)
library(statsr)
library(dplyr)
library(shiny)
library(ggplot2)
data(ames)
names(ames)
ggplot(data = ames, aes(x = area)) +
geom_histogram()
sampl1 <- ames %>%
sample_n(size = 50)
sampl1 %>%
summarise(x_bar = mean(area))
sampl2 <- ames %>%
sample_n(size = 50) %>%
summarise(x_bar = mean(area))
sample_means50 <- ames %>%
rep_sample_n(size = 50, reps = 15000, replace = TRUE) %>%
summarise(x_bar = mean(area))
ggplot(data = sample_means50, aes(x = x_bar)) +
geom_histogram(binwidth = 20)
View(sampl2)
View(ames)
View(sampl2)
View(ames)
View(sampl2)
sampl2 %>%
summarise(x_bar = mean(area))
library(statsr)
library(dplyr)
library(shiny)
library(ggplot2)
data(ames)
names(ames)
ggplot(data = ames, aes(x = area)) +
geom_histogram()
sampl1 <- ames %>%
sample_n(size = 50)
sampl1 %>%
summarise(x_bar = mean(area))
sampl2 <- ames %>%
sample_n(size = 50)
sampl2 %>%
summarise(x_bar2 = mean(area))
sample_means50 <- ames %>%
rep_sample_n(size = 50, reps = 15000, replace = TRUE) %>%
summarise(x_bar = mean(area))
ggplot(data = sample_means50, aes(x = x_bar)) +
geom_histogram(binwidth = 20)
View(sample_means50)
sample_means50 <- ames %>%
rep_sample_n(size = 50, reps = 15000, replace = TRUE) %>%
summarise(x_bar3 = mean(area))
ggplot(data = sample_means50, aes(x = x_bar)) +
geom_histogram(binwidth = 20)
sample_means50 <- ames %>%
rep_sample_n(size = 50, reps = 15000, replace = TRUE) %>%
summarise(x_bar3 = mean(area))
ggplot(data = sample_means50, aes(x = x_bar3)) +
geom_histogram(binwidth = 20)
ames %>%
summarise(mu = mean(area), pop_med = median(area),
sigma = sd(area), pop_iqr = IQR(area),
pop_min = min(area), pop_max = max(area),
pop_q1 = quantile(area, 0.25),  # first quartile, 25th percentile
pop_q3 = quantile(area, 0.75))  # third quartile, 75th percentile
rep(1,30)
rep("mujer",30)
variable = 0
while (variable<5){
print("el valor de variable es", variable)
i = i + 1
}
variable = 1
while (variable<5){
print("el valor de variable es", variable)
i = i + 1
}
variable = 1
while (variable<5){
print("el valor de variable es", variable)
variable = variable + 1
}
print("el valor de variable es"+ variable)
variable = 1
while (variable<5){
print(variable)
variable = variable + 1
}
variable = 1
while (variable<5){
print(variable)
variable += 1
?print
variable = 1
while (variable<5){
print("l", variable)
variable = 1 + variable
}
variable = 0
while (variable<5){
print("l", variable)
variable = 1 + variable
}
variable = 0
while (variable<5){
print(paste("la variable es de", variable))
variable = variable + 1
}
suma = 0
valores = 1:100
for (numero in valores){
# print(numero)
suma = numero + suma
}
print(numero)
suma = 0
valores = 1:100
for (numero in valores){
print(numero)
#suma = numero + suma
}
for (i in 1:100){
print(i)
i = i + 1
}
for (i in 1:100){
print(i)
i = i + 1
}
library(haven) # Libreria para leer archivos .dta de stata
library(tidyverse) # Libreria más importante en todo R (criterio personal del monitor)
library(readxl) # Libreria pra leer achivos excel
library(haven) # Libreria para leer archivos .dta de stata
library(haven) # Libreria para leer archivos .dta de stata
view(mtcars)
#Empezamos limpiando el entorno
remove(list = ls())
##____________________________
##____________________________
#       UNIVERSIDAD NACIONAL DE COLOMBIA - FACULTAD DE CIENCIAS ECONÓMICAS
#                         ECONOMETRÍA II - 2023-I
#                             Trabajo 1, Marzo
##____________________________
##____________________________
# Para la realización del trabajo se uilizará el Índice de producción real de la
# industria manufacturera colombiana
remove(list = ls())
#Iniciamos importando librerias importantes
library(tidyverse)
library(readxl)
library(dplyr)
read_excel(srea_027.xls)
setwd("C:\Users\PC\Documents\Repos\UNAL\Econometría_II")
setwd("C:/Users/PC/Documents/Repos/UNAL/Econometría_II")
read_excel(srea_027.xls)
setwd("C:/Users/PC/Documents/Repos/UNAL/Econometría_II")
read_excel("srea_027.xls")
ipr =  read_excel("srea_027.xls")
plot(ipr)
library(ggplot2)
ggplot(data = ipr)+
geom_histogram()
names(ipr)
ipr
ipr
ipr =  read_excel("srea_027.xls", range= cell_rows(10,567))
ipr =  read_excel("srea_027.xls", range= cell_rows(10:567))
ipr
names(ipr)
ipr =  read_excel("srea_027.xls", range= cell_rows(9:567))
names(ipr)
ipr
colnames(ipr)
colnames(ipr) <- c("Año", "Mes", "Total Industria", "Total sin Trilla")
ipr
summary(ipr)
colnames(ipr) <- c("Año", "Mes", "Total_Industria", "Total_sin_Trilla")
colnames(ipr) <- c("Año", "Mes", "Total_industria", "Total_sin_trilla")
type(ipr&Total_industria)
type(ipr$Total_industria)
typeof(ipr$Total_industria)
typeof(ipr)
ipr =  as.data.frame(read_excel("srea_027.xls", range= cell_rows(9:567)))
colnames(ipr) <- c("Año", "Mes", "Total_industria", "Total_sin_trilla")
ipr
is_empty(ipr[2,"Año"])
is_empty(ipr[3,"Año"])
is_empty(ipr[4,"Año"])
print(ipr[i,"año"])
print(ipr[1,"año"])
for (i in 1:558){                       #se puede cambiar el 558 por la longitud del ds para mayor recursividad
print(ipr[i,"año"])
#  if (ipr[i,"Año"]){
#
#  }
}
for (i in 1:558){                       #se puede cambiar el 558 por la longitud del ds para mayor recursividad
print(is_empty(ipr[i,"año"]))
#  if (ipr[i,"Año"]){
#
#  }
}
ipr$Año
for (i in 1:558){                       #se puede cambiar el 558 por la longitud del ds para mayor recursividad
print(is.na(ipr[i,"año"]))
for (i in 1:558){                       #se puede cambiar el 558 por la longitud del ds para mayor recursividad
print(is.na(ipr[i,"año"]))
#  if (ipr[i,"Año"]){
#
#  }
}
for (i in 1:558){                       #se puede cambiar el 558 por la longitud del ds para mayor recursividad
print(is.na(ipr[i,"año"]))
#  if (ipr[i,"Año"]){
#
#  }
}
for (i in 1:558){                       #se puede cambiar el 558 por la longitud del ds para mayor recursividad
print(is.nan(ipr[i,"año"]))
#  if (ipr[i,"Año"]){
#
#  }
}
ipr$Año
for (i in 1:558){                       #se puede cambiar el 558 por la longitud del ds para mayor recursividad
print(is.na(ipr[i,"Año"]))
#  if (ipr[i,"Año"]){
#
#  }
}
if is.na((ipr[i,"Año"])) = True{
for (i in 1:558){                       #se puede cambiar el 558 por la longitud del ds para mayor recursividad
if (is.na((ipr[i,"Año"])) == True){
valor = ipr[i,"Año"]
else{
for (i in 1:558){                       #se puede cambiar el 558 por la longitud del ds para mayor recursividad
if (is.na((ipr[i,"Año"])) == True){
valor = ipr[i,"Año"]
}else{
ipr[i,"Año"] = valor
}
}
is.na((ipr[i,"Año"])
is.na((ipr[i,"Año"]))
is.na((ipr[i,"Año"]))
for (i in 1:558){                       #se puede cambiar el 558 por la longitud del ds para mayor recursividad
if (is.na((ipr[i,"Año"])) == TRUE){
valor = ipr[i,"Año"]
}else{
ipr[i,"Año"] = valor
}
}
